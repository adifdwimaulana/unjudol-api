server {
    listen 80;
    listen [::]:80;
    server_name unjudol.com www.unjudol.com;

    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        default_type "text/plain";
    }

    # Redirect everything else to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name unjudol.com www.unjudol.com;

    # --- TLS certs from Let's Encrypt ---
    ssl_certificate     /etc/letsencrypt/live/unjudol.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/unjudol.com/privkey.pem;

    # (Optional) stronger security defaults
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;
    # (Optional) if you generated dhparams:
    # ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # Increase if you upload larger payloads
    client_max_body_size 25m;

    # Proxy to app
    location / {
        proxy_pass http://app:8000;
        proxy_http_version 1.1;

        # WebSocket & keepalive headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Pass through real client IP/Host
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;

        # Timeouts
        proxy_connect_timeout   5s;
        proxy_send_timeout      60s;
        proxy_read_timeout      60s;
        send_timeout            60s;
    }

    # Support `$connection_upgrade` var
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
}

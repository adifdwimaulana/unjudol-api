name: Build & Deploy (Compose + GHCR)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: unjudol-app
  REGISTRY: ghcr.io
  POSTGRES_USER: ${{ vars.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: ${{ vars.POSTGRES_DB }}
  POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
  POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
  DB_MIGRATION_URL: postgresql+psycopg2://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB
  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=short

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # ---------- DEPLOY ----------
      - name: SSH deploy (docker compose pull + up -d)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script_stop: true
          script: |
            set -e
            cd "${{ secrets.VPS_APP_DIR }}"
            # If your GHCR package is private, login with a PAT that has read:packages
            if [ -n "${{ secrets.GHCR_READ_TOKEN }}" ]; then
              echo "${{ secrets.GHCR_READ_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin
            fi

            # OPTION 1: Track "latest" (simple). Compose has pull_policy: always.
            docker compose pull app
            docker compose up -d

            # OPTION 2 (SHA pin): uncomment to pin the exact build
            # SHA_TAG="${{ steps.meta.outputs.version }}"  # e.g. sha-abc1234
            # IMG="${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${SHA_TAG}"
            # if grep -q '^GHCR_IMAGE=' .env; then
            #   sed -i "s|^GHCR_IMAGE=.*|GHCR_IMAGE=${IMG}|" .env
            # else
            #   echo "GHCR_IMAGE=${IMG}" >> .env
            # fi
            # docker compose pull app
            # docker compose up -d

version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: db
    restart: unless-stopped
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app_net

  app:
    image: ${IMAGE_NAME:-ghcr.io/adifdwimaulana/unjudol-app:latest}
    pull_policy: always
    container_name: unjudol-app
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_MIGRATION_URL: ${DB_MIGRATION_URL}
    ports:
      - "8000:8000"
    command: >
      sh -c "
        alembic upgrade head || true &&
        uvicorn app.main:app --host ${UVICORN_HOST:-0.0.0.0} --port ${UVICORN_PORT:-8000}
      "
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
      - app_net
    networks:

  nginx:
    image: nginx:latest
    container_name: unjudol-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - unjudol-app
    networks:
      - app_net

volumes:
  db_data:

networks:
  app_net:xw